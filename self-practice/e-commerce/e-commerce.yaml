# Database Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db-deployment
  labels:
    app: ecommerce
spec:
  replicas: 1
  selector:
    matchLabels:
      app: database
  template:
    metadata:
      labels:
        app: database
    spec:
      containers:
      - name: db
        image: postgres:13
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "ecommerce"
        - name: POSTGRES_USER
          value: "ecommerce_user"
        - name: POSTGRES_PASSWORD
          value: "ecommerce_password"
---
# Database Service (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: db-service
  labels:
    app: ecommerce
spec:
  selector:
    app: database
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
  type: ClusterIP
---
# Backend API Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-deployment
  labels:
    app: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: myregistry.com/ecommerce-backend:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_HOST
          value: "db-service"
        - name: DB_PORT
          value: "5432"
        - name: DB_USER
          value: "ecommerce_user"
        - name: DB_PASSWORD
          value: "ecommerce_password"
        - name: DB_NAME
          value: "ecommerce"
---
# Backend API Service (ClusterIP)
apiVersion: v1
kind: Service
metadata:
  name: backend-service
  labels:
    app: ecommerce
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP
---
# Frontend Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-deployment
  labels:
    app: ecommerce
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: frontend
        image: myregistry.com/ecommerce-frontend:latest
        ports:
        - containerPort: 80
        env:
        - name: BACKEND_API_URL
          value: "http://backend-service:8080"
---
# Frontend Service (NodePort)
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  labels:
    app: ecommerce
spec:
  selector:
    app: frontend
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30001
  type: NodePort
---
# Backend API External Access (LoadBalancer)
apiVersion: v1
kind: Service
metadata:
  name: backend-lb-service
  labels:
    app: ecommerce
spec:
  selector:
    app: backend
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: LoadBalancer
